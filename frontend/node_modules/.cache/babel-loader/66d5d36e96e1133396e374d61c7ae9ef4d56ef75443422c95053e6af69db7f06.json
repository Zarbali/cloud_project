{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zarba\\\\Desktop\\\\cloud_project\\\\frontend\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManager() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editTask, setEditTask] = useState(null); // если не null, значит редактируем\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Адрес бэкенда (Flask). Меняем на свой, если нужно\n  const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  // 1) Загрузить список задач (GET /tasks)\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/tasks/`);\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error('Ошибка при загрузке задач:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // 2) Создать задачу (POST /tasks)\n  const handleCreate = async (title, description, username) => {\n    try {\n      const response = await fetch(`${backendUrl}/tasks/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          username\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Обновляем список\n        fetchTasks();\n      } else {\n        console.error('Ошибка при создании задачи:', data.error);\n      }\n    } catch (error) {\n      console.error('Ошибка при создании задачи:', error);\n    }\n  };\n\n  // 3) Обновить задачу (PUT /tasks/:id)\n  const handleUpdate = async (id, title, description) => {\n    try {\n      const response = await fetch(`${backendUrl}/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Успешно обновили\n        fetchTasks();\n      } else {\n        console.error('Ошибка при обновлении задачи:', data.error);\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении задачи:', error);\n    }\n  };\n\n  // 4) Удалить задачу (DELETE /tasks/:id)\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`${backendUrl}/tasks/${id}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Удалили\n        fetchTasks();\n      } else {\n        console.error('Ошибка при удалении задачи:', data.error);\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении задачи:', error);\n    }\n  };\n\n  // Поиск задач (GET /tasks/search?q=...)\n  const handleSearch = async query => {\n    setSearchQuery(query);\n    if (!query) {\n      // Если строка поиска пустая — просто заново грузим все\n      fetchTasks();\n      return;\n    }\n    try {\n      const response = await fetch(`${backendUrl}/tasks/search?q=${query}`);\n      const data = await response.json();\n      if (response.ok) {\n        setTasks(data);\n      } else {\n        console.error('Ошибка при поиске задач:', data.error);\n      }\n    } catch (error) {\n      console.error('Ошибка при поиске задач:', error);\n    }\n  };\n\n  // Начать редактирование\n  const handleEditClick = task => {\n    setEditTask(task);\n  };\n\n  // Сохранить изменения при редактировании\n  const handleSaveEdit = (id, newTitle, newDescription) => {\n    handleUpdate(id, newTitle, newDescription);\n    setEditTask(null);\n  };\n\n  // Отмена редактирования\n  const handleCancelEdit = () => {\n    setEditTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onCreate: handleCreate,\n      editTask: editTask,\n      onSaveEdit: handleSaveEdit,\n      onCancelEdit: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onEditClick: handleEditClick,\n      onDeleteClick: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430 \\u043F\\u043E: \\\"\", searchQuery, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"/moSAOEdjvmKcNRtthGSwBTYyPc=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","TaskForm","SearchBar","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","editTask","setEditTask","searchQuery","setSearchQuery","backendUrl","process","env","REACT_APP_API_URL","fetchTasks","response","fetch","data","json","error","console","handleCreate","title","description","username","method","headers","body","JSON","stringify","ok","handleUpdate","id","handleDelete","handleSearch","query","handleEditClick","task","handleSaveEdit","newTitle","newDescription","handleCancelEdit","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","onSaveEdit","onCancelEdit","onEditClick","onDeleteClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/zarba/Desktop/cloud_project/frontend/src/TaskManager.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport SearchBar from './SearchBar';\r\n\r\nfunction TaskManager() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editTask, setEditTask] = useState(null); // если не null, значит редактируем\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // Адрес бэкенда (Flask). Меняем на свой, если нужно\r\n  const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  // 1) Загрузить список задач (GET /tasks)\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/tasks/`);\r\n      const data = await response.json();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке задач:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // 2) Создать задачу (POST /tasks)\r\n  const handleCreate = async (title, description, username) => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/tasks/`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title, description, username })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Обновляем список\r\n        fetchTasks();\r\n      } else {\r\n        console.error('Ошибка при создании задачи:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при создании задачи:', error);\r\n    }\r\n  };\r\n\r\n  // 3) Обновить задачу (PUT /tasks/:id)\r\n  const handleUpdate = async (id, title, description) => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/tasks/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title, description })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Успешно обновили\r\n        fetchTasks();\r\n      } else {\r\n        console.error('Ошибка при обновлении задачи:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении задачи:', error);\r\n    }\r\n  };\r\n\r\n  // 4) Удалить задачу (DELETE /tasks/:id)\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/tasks/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Удалили\r\n        fetchTasks();\r\n      } else {\r\n        console.error('Ошибка при удалении задачи:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении задачи:', error);\r\n    }\r\n  };\r\n\r\n  // Поиск задач (GET /tasks/search?q=...)\r\n  const handleSearch = async (query) => {\r\n    setSearchQuery(query);\r\n    if (!query) {\r\n      // Если строка поиска пустая — просто заново грузим все\r\n      fetchTasks();\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${backendUrl}/tasks/search?q=${query}`);\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setTasks(data);\r\n      } else {\r\n        console.error('Ошибка при поиске задач:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при поиске задач:', error);\r\n    }\r\n  };\r\n\r\n  // Начать редактирование\r\n  const handleEditClick = (task) => {\r\n    setEditTask(task);\r\n  };\r\n\r\n  // Сохранить изменения при редактировании\r\n  const handleSaveEdit = (id, newTitle, newDescription) => {\r\n    handleUpdate(id, newTitle, newDescription);\r\n    setEditTask(null);\r\n  };\r\n\r\n  // Отмена редактирования\r\n  const handleCancelEdit = () => {\r\n    setEditTask(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar onSearch={handleSearch} />\r\n      <TaskForm onCreate={handleCreate} editTask={editTask} onSaveEdit={handleSaveEdit} onCancelEdit={handleCancelEdit} />\r\n      <TaskList tasks={tasks} onEditClick={handleEditClick} onDeleteClick={handleDelete} />\r\n\r\n      {searchQuery && (\r\n        <p style={{ marginTop: '10px' }}>Результаты поиска по: \"{searchQuery}\"</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}