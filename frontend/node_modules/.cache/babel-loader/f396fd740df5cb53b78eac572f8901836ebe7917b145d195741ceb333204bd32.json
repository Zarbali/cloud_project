{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zarba\\\\Desktop\\\\cloud_project\\\\frontend\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\nimport UserForm from \"./UserForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskManager() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n      fetchTasks();\n    }\n  }, [token]);\n  const fetchUser = async () => {\n    const response = await fetch(\"http://localhost:5000/user\", {\n      headers: {\n        Authorization: token\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setUser(data);\n    } else {\n      setToken(null);\n      localStorage.removeItem(\"token\");\n    }\n  };\n  const fetchTasks = async () => {\n    if (!token) return;\n    const response = await fetch(\"http://localhost:5000/tasks/\", {\n      headers: {\n        Authorization: token\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setTasks(data);\n    }\n  };\n  const onTaskCreated = task => {\n    setTasks([...tasks, task]);\n  };\n  const onLogin = async (username, password) => {\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      localStorage.setItem(\"token\", data.token);\n      setToken(data.token);\n      setUser(data.user);\n      alert(\"Login successful!\");\n    } else {\n      alert(data.error);\n    }\n  };\n  const onLogout = () => {\n    setUser(null);\n    setToken(null);\n    setTasks([]);\n    localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onTaskCreated: onTaskCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(UserForm, {\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskManager, \"fZN0liJzNIzBg2t0vCq6aVuDUPw=\");\n_c = TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","UserForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskManager","_s","tasks","setTasks","user","setUser","token","setToken","localStorage","getItem","fetchUser","fetchTasks","response","fetch","headers","Authorization","ok","data","json","removeItem","onTaskCreated","task","onLogin","username","password","method","body","JSON","stringify","setItem","alert","error","onLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zarba/Desktop/cloud_project/frontend/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport default function TaskManager() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchUser();\r\n            fetchTasks();\r\n        }\r\n    }, [token]);\r\n\r\n    const fetchUser = async () => {\r\n        const response = await fetch(\"http://localhost:5000/user\", {\r\n            headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setUser(data);\r\n        } else {\r\n            setToken(null);\r\n            localStorage.removeItem(\"token\");\r\n        }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n        if (!token) return;\r\n\r\n        const response = await fetch(\"http://localhost:5000/tasks/\", {\r\n            headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setTasks(data);\r\n        }\r\n    };\r\n\r\n    const onTaskCreated = (task) => {\r\n        setTasks([...tasks, task]);\r\n    };\r\n\r\n    const onLogin = async (username, password) => {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", data.token);\r\n            setToken(data.token);\r\n            setUser(data.user);\r\n            alert(\"Login successful!\");\r\n        } else {\r\n            alert(data.error);\r\n        }\r\n    };\r\n\r\n    const onLogout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        setTasks([]);\r\n        localStorage.removeItem(\"token\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Task Manager</h1>\r\n            {user ? (\r\n                <>\r\n                    <h2>Welcome, {user.username}</h2>\r\n                    <button onClick={onLogout}>Logout</button>\r\n                    <TaskForm onTaskCreated={onTaskCreated} />\r\n                    <TaskList tasks={tasks} />\r\n                </>\r\n            ) : (\r\n                <UserForm onLogin={onLogin} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}