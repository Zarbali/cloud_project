{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zarba\\\\Desktop\\\\cloud_project\\\\frontend\\\\src\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  tasks,\n  onTaskDeleted,\n  onTaskUpdated\n}) {\n  _s();\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTitle, setEditedTitle] = useState(\"\");\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const handleDelete = taskId => {\n    if (window.confirm(\"Are you sure you want to delete the task?\")) {\n      onTaskDeleted(taskId);\n    }\n  };\n  const handleEdit = task => {\n    setEditingTaskId(task.id);\n    setEditedTitle(task.title);\n    setEditedDescription(task.description);\n  };\n  const handleSave = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: editedTitle,\n          description: editedDescription\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onTaskUpdated(data);\n        setEditingTaskId(null);\n        alert(\"Task updated successfully!\");\n      } else {\n        alert(`Error updating task: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      alert(\"Failed to update task.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTitle,\n            onChange: e => setEditedTitle(e.target.value),\n            placeholder: \"Task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedDescription,\n            onChange: e => setEditedDescription(e.target.value),\n            placeholder: \"Task description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(task.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingTaskId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), task.user_id && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", task.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Creation Date: \", new Date(task.created_at).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"O+QMjfxVjKX4k18oRqi6s5JMw8E=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","onTaskDeleted","onTaskUpdated","_s","editingTaskId","setEditingTaskId","editedTitle","setEditedTitle","editedDescription","setEditedDescription","handleDelete","taskId","window","confirm","handleEdit","task","id","title","description","handleSave","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","placeholder","onClick","user_id","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/zarba/Desktop/cloud_project/frontend/src/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TaskList({ tasks, onTaskDeleted, onTaskUpdated }) {\r\n    const [editingTaskId, setEditingTaskId] = useState(null);\r\n    const [editedTitle, setEditedTitle] = useState(\"\");\r\n    const [editedDescription, setEditedDescription] = useState(\"\");\r\n\r\n    const handleDelete = (taskId) => {\r\n        if (window.confirm(\"Are you sure you want to delete the task?\")) {\r\n            onTaskDeleted(taskId);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (task) => {\r\n        setEditingTaskId(task.id);\r\n        setEditedTitle(task.title);\r\n        setEditedDescription(task.description);\r\n    };\r\n\r\n    const handleSave = async (taskId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ title: editedTitle, description: editedDescription }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                onTaskUpdated(data);\r\n                setEditingTaskId(null);\r\n                alert(\"Task updated successfully!\");\r\n            } else {\r\n                alert(`Error updating task: ${data.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating task:\", error);\r\n            alert(\"Failed to update task.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Task List</h2>\r\n            <ul>\r\n                {tasks.map((task) => (\r\n                    <li key={task.id}>\r\n                        {editingTaskId === task.id ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedTitle}\r\n                                    onChange={(e) => setEditedTitle(e.target.value)}\r\n                                    placeholder=\"Task title\"\r\n                                />\r\n                                <textarea\r\n                                    value={editedDescription}\r\n                                    onChange={(e) => setEditedDescription(e.target.value)}\r\n                                    placeholder=\"Task description\"\r\n                                ></textarea>\r\n                                <button onClick={() => handleSave(task.id)}>Save</button>\r\n                                <button onClick={() => setEditingTaskId(null)}>Cancel</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <strong>{task.title}</strong>\r\n                                <p>{task.description}</p>\r\n                                {task.user_id && <p>User ID: {task.user_id}</p>}\r\n                                <p>Creation Date: {new Date(task.created_at).toLocaleString()}</p>\r\n                                <button onClick={() => handleEdit(task)}>Edit</button>\r\n                                <button onClick={() => handleDelete(task.id)}>Delete</button>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}