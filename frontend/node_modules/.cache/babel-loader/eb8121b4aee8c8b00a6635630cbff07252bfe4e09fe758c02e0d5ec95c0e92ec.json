{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zarba\\\\Desktop\\\\cloud_project\\\\frontend\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  onTaskCreated,\n  onTaskUpdated,\n  editingTask\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n      setUsername(editingTask.username || \"\");\n    } else {\n      setTitle(\"\");\n      setDescription(\"\");\n      setUsername(\"\");\n    }\n  }, [editingTask]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingTask) {\n        const response = await fetch(`http://localhost:5000/tasks/${editingTask.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title,\n            description\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          alert(\"Задача успешно обновлена!\");\n          onTaskUpdated(data);\n        } else {\n          alert(`Ошибка: ${data.error}`);\n        }\n      } else {\n        // Создание задачи\n        const response = await fetch(\"http://localhost:5000/tasks/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title,\n            description,\n            username\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          alert(\"Задача успешно создана!\");\n          onTaskCreated(data); // Передача данных задачи обратно\n        } else {\n          alert(`Ошибка: ${data.error}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке формы задачи:\", error);\n      alert(\"Не удалось выполнить запрос.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editingTask ? \"Редактировать задачу\" : \"Создать задачу\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), !editingTask && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F (\\u043E\\u043F\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: editingTask ? \"Обновить задачу\" : \"Создать задачу\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskForm, \"h66gZiMNlqq1RSGNsdPXDh3NZuM=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","onTaskUpdated","editingTask","_s","title","setTitle","description","setDescription","username","setUsername","onSubmit","e","preventDefault","response","fetch","id","method","headers","body","JSON","stringify","data","json","ok","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/zarba/Desktop/cloud_project/frontend/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function TaskForm({ onTaskCreated, onTaskUpdated, editingTask }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (editingTask) {\r\n            setTitle(editingTask.title);\r\n            setDescription(editingTask.description);\r\n            setUsername(editingTask.username || \"\");\r\n        } else {\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setUsername(\"\");\r\n        }\r\n    }, [editingTask]);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (editingTask) {\r\n\r\n                const response = await fetch(`http://localhost:5000/tasks/${editingTask.id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ title, description }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) {\r\n                    alert(\"Задача успешно обновлена!\");\r\n                    onTaskUpdated(data);\r\n                } else {\r\n                    alert(`Ошибка: ${data.error}`);\r\n                }\r\n            } else {\r\n                // Создание задачи\r\n                const response = await fetch(\"http://localhost:5000/tasks/\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ title, description, username }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) {\r\n                    alert(\"Задача успешно создана!\");\r\n                    onTaskCreated(data); // Передача данных задачи обратно\r\n                } else {\r\n                    alert(`Ошибка: ${data.error}`);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отправке формы задачи:\", error);\r\n            alert(\"Не удалось выполнить запрос.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <h2>{editingTask ? \"Редактировать задачу\" : \"Создать задачу\"}</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Название задачи\"\r\n                required\r\n            />\r\n            <textarea\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Описание задачи\"\r\n            ></textarea>\r\n            {!editingTask && (\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Имя пользователя (опционально)\"\r\n                />\r\n            )}\r\n            <button type=\"submit\">{editingTask ? \"Обновить задачу\" : \"Создать задачу\"}</button>\r\n        </form>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,QAAQA,CAAC;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC5E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAW,EAAE;MACbG,QAAQ,CAACH,WAAW,CAACE,KAAK,CAAC;MAC3BG,cAAc,CAACL,WAAW,CAACI,WAAW,CAAC;MACvCG,WAAW,CAACP,WAAW,CAACM,QAAQ,IAAI,EAAE,CAAC;IAC3C,CAAC,MAAM;MACHH,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;MAClBE,WAAW,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,MAAMQ,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,IAAIV,WAAW,EAAE;QAEb,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BZ,WAAW,CAACa,EAAE,EAAE,EAAE;UAC1EC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEhB,KAAK;YAAEE;UAAY,CAAC;QAC/C,CAAC,CAAC;QAEF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAElC,IAAIT,QAAQ,CAACU,EAAE,EAAE;UACbC,KAAK,CAAC,2BAA2B,CAAC;UAClCvB,aAAa,CAACoB,IAAI,CAAC;QACvB,CAAC,MAAM;UACHG,KAAK,CAAC,WAAWH,IAAI,CAACI,KAAK,EAAE,CAAC;QAClC;MACJ,CAAC,MAAM;QACH;QACA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UACzDE,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEhB,KAAK;YAAEE,WAAW;YAAEE;UAAS,CAAC;QACzD,CAAC,CAAC;QAEF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAElC,IAAIT,QAAQ,CAACU,EAAE,EAAE;UACbC,KAAK,CAAC,yBAAyB,CAAC;UAChCxB,aAAa,CAACqB,IAAI,CAAC,CAAC,CAAC;QACzB,CAAC,MAAM;UACHG,KAAK,CAAC,WAAWH,IAAI,CAACI,KAAK,EAAE,CAAC;QAClC;MACJ;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDD,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAMY,QAAQ,EAAEA,QAAS;IAAAiB,QAAA,gBACrB7B,OAAA;MAAA6B,QAAA,EAAKzB,WAAW,GAAG,sBAAsB,GAAG;IAAgB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClEjC,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE7B,KAAM;MACb8B,QAAQ,EAAGvB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,uFAAiB;MAC7BC,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFjC,OAAA;MACImC,KAAK,EAAE3B,WAAY;MACnB4B,QAAQ,EAAGvB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACX,CAAC7B,WAAW,iBACTJ,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGvB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAgC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACJ,eACDjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAEzB,WAAW,GAAG,iBAAiB,GAAG;IAAgB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEf;AAAC5B,EAAA,CA1FuBJ,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}